{"version":3,"sources":["components/Cards.js","components/CardList.js","components/SearchBox.js","robots.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","serviceWorker.js","index.js"],"names":["Cards","name","email","id","className","src","alt","CardList","robots","cardArray","map","user","i","key","emails","SearchBox","searchChange","searchField","type","placeholder","onChange","username","Scroll","props","style","overflowY","border","borderBottom","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","console","log","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e15da40a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Cards =({name,email,id})=>{\r\n    return(\r\n        <div className=\"tc bg-lightest-blue dib br3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"robo avatars\"/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards; ","import React from 'react';\r\nimport Cards from './Cards';\r\n\r\n//when doing a looping a unique key is needed so as to identify each item uniquely\r\nconst CardList =({robots})=>{\r\nconst cardArray = robots.map((user,i)=>{\r\n        return <Cards \r\n        key={i}\r\n        id={robots[i].id} \r\n        name={robots[i].name} \r\n        email={robots[i].emails} />;\r\n        });\r\n    return(\r\n        <div>\r\n    {cardArray}\r\n    </div>\r\n    );\r\n} \r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox =({searchChange,searchField})=>{\r\n    return(\r\n        <div className=\"pa2\">\r\n            <input className=\"bg-lightest-blue ba pa3 b--blue\"\r\n             type= 'search'\r\n             name='searchBox' \r\n             placeholder='search for pals'\r\n             onChange={searchChange}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","export const robots = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];\n","import React from 'react';\r\n\r\nconst Scroll=(props)=>{\r\nreturn (\r\n    <div style={{overflowY:'scroll',border:'1px solid #fff',borderBottom:'0px', height:'400px'}}>\r\n        {props.children};\r\n    </div>\r\n);\r\n}\r\nexport default Scroll;","\r\nimport React , {Component } from 'react';\r\n\r\nclass  ErrorBoundry extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            hasError :false\r\n        }\r\n    }\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError:true});\r\n    }\r\n    render(){\r\n\r\n        if(this.state.hasError){\r\n        return <h1>ooops!! something went wrong.</h1>\r\n        }\r\n        \r\n      return this.props.children\r\n        }\r\n    \r\n  \r\n}\r\n\r\nexport default ErrorBoundry;","import React,{Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport  './App.css';\r\nimport {robots} from '../robots'\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n    super()\r\n    this.state={\r\n    robots: robots,\r\n    //robots:[],\r\n    searchField:''\r\n        }\r\n\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typeicode.com/users')\r\n        \r\n        .then(response=> response.json())\r\n        .then(users=>this.setState({robots:users})) //updates the app state with the users returned from the server\r\n        \r\n    }\r\n  onSearchChange = (event)=>{\r\n     this.setState({searchField: event.target.value});\r\n    console.log({searchField: event.target.value});\r\n  }\r\n    render(){\r\n        const { searchField, robots} = this.state;\r\n        const filteredRobots =robots.filter(robot=>{\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    \r\n        });\r\n        if (this.state.robots.length === 0){\r\n            return <h1 className=\"tc\">Loading....</h1>\r\n        }else{\r\n        return (\r\n            <div className=\"tc\">\r\n            <h1 className='f1'>Robopals</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                <CardList robots={filteredRobots}/>\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n                \r\n            </div>\r\n        );\r\n        }\r\n        }\r\n   \r\n}\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\n\nReactDOM.render(<App/>, document.getElementById('root')\n \n   );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}